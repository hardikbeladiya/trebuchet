{"tagline":"A node.js module for throwing email around using the Postmark API.","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### Let's chuck some email!\r\n\r\nTrebuchet is a node.js module for super simple email transactions using the [Postmark API](http://postmarkapp.com) and [Mustache](http://mustache.github.com/) with [Juice](https://github.com/LearnBoost/juice) for templating. Trebuchet was designed with simple email rendering, batching and API operations in mind.\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install trebuchet\r\n```\r\n\r\n## Basic Use (Fling Pattern)\r\n\r\n```javascript\r\nvar trebuchet = require('trebuchet')('yourapikey');\r\n\r\ntrebuchet.fling({\r\n    params: {\r\n        from: 'you@domain.com',\r\n        to: 'someone@domain.com',\r\n        subject: 'This is only a test of the fling pattern'\r\n    },\r\n    html: 'path/to/template/fling.html',\r\n    text: 'path/to/template/fling.txt',\r\n    data: {\r\n        foo: 'Bar'\r\n    }\r\n}, function (err, response) {\r\n    // Win!\r\n});\r\n```\r\n\r\n## Basic Use (Fling Pattern with HTML friendly inlined-CSS support)\r\n\r\n```javascript\r\nvar trebuchet = require('trebuchet')('yourapikey');\r\n\r\ntrebuchet.fling({\r\n    params: {\r\n        from: 'you@domain.com',\r\n        to: 'someone@domain.com',\r\n        subject: 'This is only a test of the fling pattern'\r\n    },\r\n    html: 'path/to/template/fling.html',\r\n    css: 'path/to/template/fling.css',\r\n    text: 'path/to/template/fling.txt',\r\n    data: {\r\n        foo: 'Bar'\r\n    }\r\n}, function (err, response) {\r\n    // Win!\r\n});\r\n```\r\n\r\n## Batch Sender (Load --> Fire Pattern)\r\n\r\nThe batch sender uses the [Postmark API's batch method](http://developer.postmarkapp.com/developer-build.html#batching-messages) to support sending groups of messages (up to 500 at a time).\r\n\r\n**NOTE**: You can also pass a css variable to load a stylesheet that will be inlined using `juice`.\r\n\r\n```javascript\r\nvar trebuchet = require('trebuchet')('yourapikey');\r\n\r\ntrebuchet.load({\r\n    params: {\r\n        from: 'you@domain.com',\r\n        to: 'someone@domain.com',\r\n        subject: 'This is only a test of the load/fire pattern'\r\n    },\r\n    html: 'path/to/template/fire.html',\r\n    text: 'path/to/template/fire.txt',\r\n    data: {\r\n        foo: 'Bar',\r\n        name: 'Bubba'\r\n    }\r\n}, function (err, response) {\r\n    // Loaded!\r\n});\r\n```\r\n\r\n```javascript\r\ntrebuchet.fire(function (err, response) {\r\n    // Win!\r\n});\r\n```\r\n\r\n## Templating\r\n\r\nTrebuchet uses [Mustache](http://mustache.github.com/) templates to make sending dynamic HTML and plain-text emails super-duper simple.\r\n\r\n**NEW**: We've added support [Juice](https://github.com/LearnBoost/juice) which allows one to pass a `css` variable and inline the CSS with the HTML template for email-friendly CSS... KA POW! (thanks to @niftylettuce)\r\n\r\nAn example template:\r\n\r\n```html\r\n<html>\r\n    <body>\r\n        <h1>{{greeting}}</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\nWith example data:\r\n\r\n```javascript\r\n{\r\n    greeting: 'Hello World!'\r\n}\r\n```\r\n\r\nResult (without CSS argument):\r\n\r\n```html\r\n<html>\r\n    <body>\r\n        <h1>Hello World!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\nResult (with CSS argument, e.g. \"some/path/to/template.css\"):\r\n\r\n```html\r\n<html>\r\n    <body style=\"color:yellow;background-color:black;\">\r\n        <h1>Hello World!</h1>\r\n    </body>\r\n</html>\r\n```\r\n\r\nInstead of having to pass `html`, `css`, and `text` options every time, you can simply pass a `templateName`, as long as you have defined a `templateDirectory`.\r\n\r\n```javascript\r\nvar trebuchet = require('trebuchet', { apikey: 'yourapikey', templateDirectory: path.join(__dirname, 'templates') });\r\n\r\ntrebuchet.fling({\r\n    params: {\r\n        from: 'you@domain.com',\r\n        to: 'someone@domain.com',\r\n        subject: 'This is only a test of template usage'\r\n    },\r\n        // the template property will automatically load and set the following options without you having to manually set them\r\n        // * html: ~/templates/fling-test/index.html\r\n        // * css:  ~/templates/fling-test/index.css\r\n        // * text: ~/templates/fling-test/index.txt\r\n        template: 'fling-test',\r\n        data: {\r\n            foo: 'Bar'\r\n        }\r\n    }, function(err, response) {\r\n        // Template Win!\r\n    });\r\n```\r\n\r\n## Testing\r\n\r\n```bash\r\nnode test/* --from \"you@domain.com\" --to \"someone@domain.com\"\r\n```","name":"Trebuchet","google":"UA-33281153-1"}